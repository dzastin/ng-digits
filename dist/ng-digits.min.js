/*! ng-digits 2017-02-19 */
angular.module("ng-digits",[]).provider("ngDigitsConfig",[function(){var a=this;this.decimalSeparator=".",this.thousandsSeparator=" ",this.decimalCount=0,this.maxValue=null,this.minValue=null,this.parseToNumber=!0,this.allowedLeadingZeros=!1,this.$get=[function(){return a}]}]),angular.module("ng-digits").provider("ngDigitsMainHelper",[function(){var a=this;this.getStringForInput=function(b,c){var b=a.getValueForModel(b,c)+"";return b=b.replace(/\B(?=(\d{3})+(?!\d))/g,c.thousandsSeparator),b=b.replace(new RegExp(a.escapeRegex("."),"g"),c.decimalSeparator)},this.getValueForModel=function(b,c){return b=angular.isDefined(b)?b+"":"",b=b.replace(new RegExp(a.escapeRegex(c.thousandsSeparator),"g"),""),b=b.replace(new RegExp(a.escapeRegex(c.decimalSeparator),"g"),"."),c.parseToNumber&&(b=c.decimalCount>0?parseFloat(b,10):parseInt(b,10)),b},this.escapeRegex=function(a){return a.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&")},this.$get=[function(){return a}]}]),angular.module("ng-digits").directive("ngDigits",["ngDigitsFormatter","ngDigitsParser","ngDigitsEventHandler","ngDigitsConfig","ngDigitsMainHelper",function(a,b,c,d,e){return{scope:{ngDigitsFormatter:"="},require:"ngModel",restrict:"A",link:function(f,g,h,i){var j=angular.copy(d);angular.isObject(f.ngDigitsFormatter)&&angular.extend(j,f.ngDigitsFormatter),i.$formatters.push(function(b){return a.formatter(b,j)}),i.$parsers.push(function(a){return b.parser(a,j)}),i.$viewChangeListeners.push(function(){i.$setViewValue(e.getStringForInput(i.$viewValue,j)),i.$render()}),g.on("keypress",function(a){return c.keyPress(a,j)})}}}]),angular.module("ng-digits").provider("ngDigitsEventHandler",["$windowProvider",function(a){var b=this;this.keyPress=function(b){b=b||a.$get().event;var c=angular.isUndefined(b.which)?b.keyCode:b.which,d=String.fromCharCode(c);return!!/\d/.test(d)||(b.preventDefault(),!1)},this.$get=[function(){return b}]}]),angular.module("ng-digits").provider("ngDigitsFormatter",["ngDigitsMainHelperProvider",function(a){var b=this;this.formatter=function(b,c){return a.getStringForInput(b,c)},this.$get=[function(){return b}]}]),angular.module("ng-digits").provider("ngDigitsParser",["ngDigitsMainHelperProvider",function(a){var b=this;this.parser=function(b,c){return a.getValueForModel(b,c)},this.$get=[function(){return b}]}]);